<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="nodejs-fle">
  <title>Field Level Encryption from the Java SDK</title>
  <shortdesc>Field Level Encryption is available in Couchbase Data Platform 5.5, from Node.js SDK version 2.5.0</shortdesc>
  <conbody>
        <section id="package">
          <title>Packaging</title>
            <p>The Couchbase Node.js SDK uses the <codeph>node-couchbase-encryption</codeph> library to provide support for encryption and decryption of JSON fields.</p>

            <p>The Couchbase Node.js Field Level Encryption (FLE) uses a list of fields mapped to crypto providers to define which field(s) to apply encryption and which algorithm to use. You must also configure a key store to use with your providers.<codeblock outputclass="language-nodejs">var publicKey = '!mysecretkey#9^5usdk39d&dlf)03sL';
var signingKey = 'myauthpassword';

var keyStore = new cbfieldcrypt.InsecureKeyStore();
keyStore.addKey('publickey', publicKey);
keyStore.addKey('mysecret', signingKey);

var personCryptFields = {
  password: new cbfieldcrypt.AesCryptoProvider(keyStore, 'publickey', 'mysecret')
};</codeblock></p></section>

        <section id="encryption">
          <title>Encryption</title>
    <p>To apply encryption to an object you are writing to Couchbase, use the encrypt function with your provider map:<codeblock outputclass="language-nodejs">var encryptedTeddy = cbfieldcrypt.encryptFields(teddy, personCryptFields);

bucket.upsert('person::1', encryptedTeddy, function(err, res) {
  if (err) {
    throw err;
  }

  // ...
});</codeblock></p></section>


        <section id="decryption">
          <title>Decrypting</title>
    <p>To remove encryption from an object which was previously encrypted and stored in Couchbase, use the decrypt function, again with your provider map:<codeblock outputclass="language-nodejs">bucket.get('person::1', function(err, res) {
  if (err) {
    throw err;
  }

  var encryptedData = res.value;
  var decryptedData =
      cbfieldcrypt.decryptFields(encryptedData, personCryptFields);

  // ...
});</codeblock></p></section>

  </conbody>
</concept>