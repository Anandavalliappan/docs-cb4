<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_mln_twc_3w">
  <title>Running Couchbase Server Using Docker</title> <shortdesc>Using Docker Hub and the official Couchbase Server images, it's easy to get started with
    Couchbase Server on Docker containers.</shortdesc>
  <body>
    <p>If you're trying Couchbase Server for the first time and just want to explore a Couchbase
      configuration, the quickest way to install a pre-configured single node using Docker is to
      follow the <xref href="../getting-started/start-here.dita#startHere"/> tutorial.</p>
    <p>For more traditional Docker deployments, review the single-node and multi-node deployment
      instructions in this topic, which use the official Couchbase Docker images available on <xref
        href="https://hub.docker.com/_/couchbase/" scope="external" format="html">Docker
      Hub</xref>.</p>
    <section id="section_jvt_zvj_42b">
      <title>Deploying a Single-Node Cluster</title>
      <p>To run a single node cluster, you need to deploy a single Couchbase Server container
        representing the single node.</p>
      <note>Before you begin, review the Couchbase Server <xref
          href="plan-for-production.dita#topic_tqm_rcx_fw">system requirements</xref> and <xref
          href="install-production-deployment.dita#concept_jgc_ddp_ts">deployment guidelines</xref>,
        paying particular attention to the <xref href="best-practices-vm.dita#topic_sg3_1fz_bx"
          >guidelines for virtualized environments</xref>.</note>
      <ol id="ol_b23_dck_42b">
        <li>Download and install Docker on the host machine.<p>To set up Docker on the host system,
            go to the <xref href="https://www.docker.com/get-docker" format="html" scope="external"
              >Docker installation page</xref> and follow the instructions.</p></li>
        <li>Run the following command to install the Couchbase Server
            container:<codeblock>docker run -d --name db -p 8091-8094:8091-8094 -p 11210:11210 couchbase</codeblock><p>This
            command downloads and runs the container that is tagged <codeph>latest</codeph> from the
            official Couchbase repository on Docker Hub. </p><note>If Couchbase Server is running
            locally on the machine without containers, the port mappings specified using the
              <codeph>-p</codeph> option may fail. Ensure that you stop any local instance of
            Couchbase Server before running the above command.</note>You can check the Docker logs
          to verify that the container has started: <codeblock>docker logs db</codeblock>If the
          container has started, the output should start with the following:
          <codeblock>Starting Couchbase Server -- Web UI available at http://&lt;ip>:8091
...</codeblock></li>
        <li>From a Web browser, go to <filepath>http://localhost:8091</filepath> to access the
          Couchbase Server Web Console. If the container is up and running, you should see the
          Couchbase Server Setup Screen. <image placement="break" href="../admin/picts/welcome.png"
            id="image_c23_dck_42b"/></li>
        <li>Walk through the setup wizard to <xref href="init-setup.dita#topic12527">initialize the
            Couchbase Server cluster</xref> as normal.<p>You may need to lower the RAM allocation
            for various services to fit within the bounds of the resource for the
            containers.</p><p>You can enable the <codeph>travel-sample</codeph> and
              <codeph>beer-sample</codeph> buckets to load some sample data.</p></li>
      </ol>
      <p>This is all that is needed for a single node deployment of Couchbase Server. If you want to
        add nodes to your cluster, see <xref href="docker-deploy-multi-node-cluster.dita"/> and
          <xref href="init-setup.dita#topic12527">initialize the cluster</xref>.</p>
    </section>
    <section id="section_msh_fbl_42b"><title>Deploying a Multi-node Cluster with Docker</title>There
      are two popular topologies for Couchbase Server multi-node clusters:<ul id="ul_svt_ybl_42b">
        <li>All Couchbase Server containers on one physical machine<p>This model is commonly used
            for scale-minimized deployments that simulate production deployments for development and
            testing purposes.</p></li>
      </ul><ul id="ul_zhr_ccl_42b">
        <li>
          <p>Each Couchbase Server container on its own physical machine</p>
          <p>This model is commonly used for production deployments. This is the only supported
            topology for production with Couchbase Server 4.5 and higher.</p>
        </li>
      </ul><note>Before you begin, review the Couchbase Server <xref
          href="plan-for-production.dita#topic_tqm_rcx_fw">system requirements</xref> and <xref
          href="install-production-deployment.dita#concept_jgc_ddp_ts">deployment guidelines</xref>,
        paying particular attention to the <xref href="best-practices-vm.dita#topic_sg3_1fz_bx"
          >guidelines for virtualized environments</xref>.</note><p><b>Deploying all Couchbase
          Server containers on one physical machine</b></p><p>In this deployment model, all
        containers are placed on the same physical machine. Placing all containers on a single
        physical machine means all containers will compete for the same resources. That is okay for
        test systems, but it isnâ€™t recommended for applications sensitive to performance.</p><p>The
        following example explains how to set up a three-node Couchbase Server cluster with all of
        the containers running on one physical machine:</p><ol id="ol_v2q_h2l_42b">
        <li>Download and install Docker on the host machine.<p>To set up Docker on the host system,
            go to the <xref href="https://www.docker.com/get-docker" format="html" scope="external"
              >Docker installation page</xref> and follow the instructions.</p></li>
        <li>Run the following commands to install the Couchbase Server containers
            <codeph>db1</codeph>, <codeph>db2</codeph>, and
            <codeph>db3</codeph>:<codeblock>$ docker run -d --name db1 couchbase

$ docker run -d --name db2 couchbase

$ docker run -d --name db3 -p 8091-8094:8091-8094 -p 11210:11210 couchbase</codeblock><p>These
            commands download and run three instances of the container that is tagged
              <codeph>latest</codeph> from the official Couchbase repository on Docker Hub.<note>If
              Couchbase Server is running locally on the machine without containers, the port
              mappings specified using the <codeph>-p</codeph> option may fail. Ensure that you stop
              any local instance of Couchbase Server before running the above
              command.</note><note>If you are using encrypted communication for the Web Console,
              client, and server, and using XDCR, you need to open up additional ports. For details,
              see <xref href="install-ports.dita"/>.</note></p>You can check the Docker logs to
          verify that each container has started:
          <codeblock>$ docker logs db1

$ docker logs db2

$ docker logs db3</codeblock> If the
          containers have started, the output of each of the above commands should start with the
          following:<codeblock>Starting Couchbase Server -- Web UI available at http://&lt;ip>:8091
...</codeblock></li>
        <li>Run the following commands to discover the local IP addresses of <codeph>db1</codeph>
          and
            <codeph>db2</codeph>:<codeblock>$ docker inspect --format '{{ .NetworkSettings.IPAddress }}' db1

$ docker inspect --format '{{ .NetworkSettings.IPAddress }}' db2</codeblock><p>You
            need the IP addresses of <codeph>db1</codeph> and <codeph>db2</codeph> to set up the
            three-node Couchbase Server cluster. The initial cluster setup will automatically pick
            up the IP address for <codeph>db3</codeph>.</p></li>
        <li>From a Web browser, go to <filepath>http://localhost:8091</filepath> to access the Web
          Console. If <codeph>db3</codeph> is up and running, you should see the Couchbase Server
          Setup Screen.<image placement="break" href="../admin/picts/welcome.png"
            id="image_lsh_kdm_ccb"/></li>
        <li>Walk through the setup wizard to <xref href="init-setup.dita#topic12527">initialize the
            Couchbase Server cluster</xref> as normal.<p>You may need to lower the RAM allocation
            for various services to fit within the bounds of the resource for the
            containers.</p><p>You can enable the <codeph>travel-sample</codeph> and
              <codeph>beer-sample</codeph> buckets to load some sample data.</p></li>
        <li>After the the cluster is initialized on the first Couchbase Server node
            (<codeph>db3</codeph>), the next step is to add the Couchbase nodes from
            <codeph>db1</codeph> and <codeph>db2</codeph> to the cluster.<ol id="ol_w2q_h2l_42b">
            <li>In the Web Console, go to the <uicontrol>Servers</uicontrol> tab and click
                <uicontrol>ADD SERVER</uicontrol>. Specify the IP address that you previously
              captured for <codeph>db1</codeph>, and click <uicontrol>Add Server</uicontrol>.<image
                placement="break" href="picts/cluster-setup-add-server-db1.png"
                id="image_kxc_lgg_3w" width="350"/></li>
            <li>After <codeph>db1</codeph> is successfully added, click <uicontrol>ADD
                SERVER</uicontrol> again. Specify the IP address that you previously captured for
                <codeph>db2</codeph>, and click <uicontrol>Add Server</uicontrol>.</li>
            <li>Click <uicontrol>Rebalance</uicontrol>.<image placement="break"
                href="picts/docker-single-machine-db123.png" width="570" id="image_ybp_2gg_3w"
              /></li>
          </ol></li>
      </ol><p>This is all that is needed for a multi-node Couchbase Server cluster deployment using
        a single physical machine.</p><p><b>Deploying Couchbase Server Containers Across Many
          Physical Machines</b></p><p>In this deployment model each container is placed on its own
        physical machine. This is the supported model for production deployments with Couchbase
        Server containers.</p><p>In this example, weâ€™ll set up a 3 nodes Couchbase Server cluster,
        with each Couchbase Server container running on its own physical machine.</p></section>
    <section>
      <title>Running a N1QL Query</title>
      <p>Open the Web Console at <filepath>http://localhost:8091</filepath> and switch to the Query
        tab. Run the following N1QL query:
        <codeblock>SELECT name FROM `beer-sample` WHERE  brewery_id ="mishawaka_brewing";</codeblock></p>
      <p>To run a query from command line query tool: <ol>
          <li>Run the interactive shell on the container:
            <codeblock>bash -c "clear &amp;&amp; docker exec -it db sh"</codeblock></li>
          <li>Navigate to the <filepath>bin</filepath> directory:
            <codeblock># cd /opt/couchbase/bin</codeblock></li>
          <li>Run the <cmdname>cbq</cmdname> command line tool: <codeblock># ./cbq</codeblock></li>
          <li>Execute a N1QL query on the `beer-sample` bucket:
            <codeblock>cbq> SELECT name FROM `beer-sample` WHERE  brewery_id ="mishawaka_brewing";</codeblock>
          </li>
        </ol></p>
      <p>For more query samples, see <xref href="../getting-started/first-n1ql-query.dita"/>. </p>
    </section>
    <section>
      <title>Connect via SDK</title>
      <p>Simply run your application through the Couchbase Server SDKs on the host and point it to
          <filepath>http://localhost:8091/pools</filepath> to connect to the container.</p>
      <p>For running a sample application, see <xref href="../sdk/sample-application.dita"/>. </p>
    </section>
  </body>
</topic>
